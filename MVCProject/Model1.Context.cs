//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MVCProject
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MVCProject1Entities : DbContext
    {
        public MVCProject1Entities()
            : base("name=MVCProject1Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CompanyReg> CompanyRegs { get; set; }
        public virtual DbSet<JobApply> JobApplies { get; set; }
        public virtual DbSet<JobDetail> JobDetails { get; set; }
        public virtual DbSet<LoginTab> LoginTabs { get; set; }
        public virtual DbSet<UserReg> UserRegs { get; set; }
    
        public virtual int sp_companyReg(Nullable<int> cid, string cna, string caddr, string cemail, string cwebsite, string cphone)
        {
            var cidParameter = cid.HasValue ?
                new ObjectParameter("cid", cid) :
                new ObjectParameter("cid", typeof(int));
    
            var cnaParameter = cna != null ?
                new ObjectParameter("cna", cna) :
                new ObjectParameter("cna", typeof(string));
    
            var caddrParameter = caddr != null ?
                new ObjectParameter("caddr", caddr) :
                new ObjectParameter("caddr", typeof(string));
    
            var cemailParameter = cemail != null ?
                new ObjectParameter("cemail", cemail) :
                new ObjectParameter("cemail", typeof(string));
    
            var cwebsiteParameter = cwebsite != null ?
                new ObjectParameter("cwebsite", cwebsite) :
                new ObjectParameter("cwebsite", typeof(string));
    
            var cphoneParameter = cphone != null ?
                new ObjectParameter("cphone", cphone) :
                new ObjectParameter("cphone", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_companyReg", cidParameter, cnaParameter, caddrParameter, cemailParameter, cwebsiteParameter, cphoneParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_countLoginId(string una, string pwd)
        {
            var unaParameter = una != null ?
                new ObjectParameter("una", una) :
                new ObjectParameter("una", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_countLoginId", unaParameter, pwdParameter);
        }
    
        public virtual int sp_loginInsert(Nullable<int> rid, string una, string pw, string utype)
        {
            var ridParameter = rid.HasValue ?
                new ObjectParameter("rid", rid) :
                new ObjectParameter("rid", typeof(int));
    
            var unaParameter = una != null ?
                new ObjectParameter("una", una) :
                new ObjectParameter("una", typeof(string));
    
            var pwParameter = pw != null ?
                new ObjectParameter("pw", pw) :
                new ObjectParameter("pw", typeof(string));
    
            var utypeParameter = utype != null ?
                new ObjectParameter("utype", utype) :
                new ObjectParameter("utype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_loginInsert", ridParameter, unaParameter, pwParameter, utypeParameter);
        }
    
        public virtual ObjectResult<string> sp_loginType(string una, string pwd)
        {
            var unaParameter = una != null ?
                new ObjectParameter("una", una) :
                new ObjectParameter("una", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_loginType", unaParameter, pwdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_maxRegId()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_maxRegId");
        }
    
        public virtual ObjectResult<Nullable<int>> sp_regId(string una, string pwd)
        {
            var unaParameter = una != null ?
                new ObjectParameter("una", una) :
                new ObjectParameter("una", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_regId", unaParameter, pwdParameter);
        }
    
        public virtual ObjectResult<sp_selectAllJob_Result> sp_selectAllJob()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_selectAllJob_Result>("sp_selectAllJob");
        }
    
        public virtual int sp_userReg(Nullable<int> uid, string na, Nullable<int> ag, string addr, string em, string phone, string gen, string state, string qual, string skills, string exp, string loc, string photo)
        {
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(int));
    
            var naParameter = na != null ?
                new ObjectParameter("na", na) :
                new ObjectParameter("na", typeof(string));
    
            var agParameter = ag.HasValue ?
                new ObjectParameter("ag", ag) :
                new ObjectParameter("ag", typeof(int));
    
            var addrParameter = addr != null ?
                new ObjectParameter("addr", addr) :
                new ObjectParameter("addr", typeof(string));
    
            var emParameter = em != null ?
                new ObjectParameter("em", em) :
                new ObjectParameter("em", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(string));
    
            var genParameter = gen != null ?
                new ObjectParameter("gen", gen) :
                new ObjectParameter("gen", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(string));
    
            var qualParameter = qual != null ?
                new ObjectParameter("qual", qual) :
                new ObjectParameter("qual", typeof(string));
    
            var skillsParameter = skills != null ?
                new ObjectParameter("skills", skills) :
                new ObjectParameter("skills", typeof(string));
    
            var expParameter = exp != null ?
                new ObjectParameter("exp", exp) :
                new ObjectParameter("exp", typeof(string));
    
            var locParameter = loc != null ?
                new ObjectParameter("loc", loc) :
                new ObjectParameter("loc", typeof(string));
    
            var photoParameter = photo != null ?
                new ObjectParameter("photo", photo) :
                new ObjectParameter("photo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_userReg", uidParameter, naParameter, agParameter, addrParameter, emParameter, phoneParameter, genParameter, stateParameter, qualParameter, skillsParameter, expParameter, locParameter, photoParameter);
        }
    
        public virtual int sp_insertJobDetails(Nullable<int> cid, string jtitle, string jdesp, string jskills, string jexp, string jsalary, string jloc, string jlastdate, string jstatus)
        {
            var cidParameter = cid.HasValue ?
                new ObjectParameter("cid", cid) :
                new ObjectParameter("cid", typeof(int));
    
            var jtitleParameter = jtitle != null ?
                new ObjectParameter("jtitle", jtitle) :
                new ObjectParameter("jtitle", typeof(string));
    
            var jdespParameter = jdesp != null ?
                new ObjectParameter("jdesp", jdesp) :
                new ObjectParameter("jdesp", typeof(string));
    
            var jskillsParameter = jskills != null ?
                new ObjectParameter("jskills", jskills) :
                new ObjectParameter("jskills", typeof(string));
    
            var jexpParameter = jexp != null ?
                new ObjectParameter("jexp", jexp) :
                new ObjectParameter("jexp", typeof(string));
    
            var jsalaryParameter = jsalary != null ?
                new ObjectParameter("jsalary", jsalary) :
                new ObjectParameter("jsalary", typeof(string));
    
            var jlocParameter = jloc != null ?
                new ObjectParameter("jloc", jloc) :
                new ObjectParameter("jloc", typeof(string));
    
            var jlastdateParameter = jlastdate != null ?
                new ObjectParameter("jlastdate", jlastdate) :
                new ObjectParameter("jlastdate", typeof(string));
    
            var jstatusParameter = jstatus != null ?
                new ObjectParameter("jstatus", jstatus) :
                new ObjectParameter("jstatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insertJobDetails", cidParameter, jtitleParameter, jdespParameter, jskillsParameter, jexpParameter, jsalaryParameter, jlocParameter, jlastdateParameter, jstatusParameter);
        }
    
        public virtual ObjectResult<sp_allJobDetails_Result> sp_allJobDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_allJobDetails_Result>("sp_allJobDetails");
        }
    
        public virtual int sp_cvInsert(Nullable<int> uid, Nullable<int> jid, string res, string applydate, string applystatus)
        {
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(int));
    
            var jidParameter = jid.HasValue ?
                new ObjectParameter("jid", jid) :
                new ObjectParameter("jid", typeof(int));
    
            var resParameter = res != null ?
                new ObjectParameter("res", res) :
                new ObjectParameter("res", typeof(string));
    
            var applydateParameter = applydate != null ?
                new ObjectParameter("applydate", applydate) :
                new ObjectParameter("applydate", typeof(string));
    
            var applystatusParameter = applystatus != null ?
                new ObjectParameter("applystatus", applystatus) :
                new ObjectParameter("applystatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_cvInsert", uidParameter, jidParameter, resParameter, applydateParameter, applystatusParameter);
        }
    }
}
